{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MAN13\\\\Downloads\\\\friibee\\\\friibee-compile\\\\bottom-tab-bar\\\\Function.js\";\nimport React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport 'react-native-gesture-handler';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport HomePage from \"../HomePage\";\nimport SwipePage from \"../SwipePage\";\nimport NotificationPage from \"../NotificationPage\";\nimport SettingPage from \"../SettingPage\";\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { Feather } from '@expo/vector-icons';\nimport { useRef } from 'react';\nvar Tab = createBottomTabNavigator();\nexport default function App() {\n  var _this = this;\n\n  var tabOffsetValue = useRef(new Animated.Value(0)).current;\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Navigator, {\n    tabBarOptions: {\n      showLabel: false,\n      style: {\n        backgroundColor: '#FFF8F4',\n        position: 'absolute',\n        height: 60,\n        borderBottomLeftRadius: 0,\n        borderBottomRightRadius: 0,\n        borderTopLeftRadius: 20,\n        borderTopRightRadius: 20,\n        shadowColor: '#6D2903',\n        shadowOpacity: 0.08,\n        shadowOffset: {\n          width: 10,\n          height: 10\n        },\n        paddingHorizontal: 20\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref) {\n        var focused = _ref.focused;\n        return React.createElement(View, {\n          style: {\n            position: 'absolute',\n            top: 20\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }\n        }, React.createElement(FontAwesome5, {\n          name: \"home\",\n          size: 20,\n          color: focused ? '#F26530' : 'gray',\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }\n        }));\n      }\n    },\n    listeners: function listeners(_ref2) {\n      var navigation = _ref2.navigation,\n          route = _ref2.route;\n      return {\n        tabPress: function tabPress(e) {\n          Animated.spring(tabOffsetValue, {\n            toValue: 0,\n            useNativeDriver: true\n          }).start();\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Search\",\n    component: SearchScreen,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var focused = _ref3.focused;\n        return React.createElement(View, {\n          style: {\n            position: 'absolute',\n            top: 20\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }\n        }, React.createElement(MaterialIcons, {\n          name: \"swipe\",\n          size: 20,\n          color: focused ? '#F26530' : 'gray',\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }\n        }));\n      }\n    },\n    listeners: function listeners(_ref4) {\n      var navigation = _ref4.navigation,\n          route = _ref4.route;\n      return {\n        tabPress: function tabPress(e) {\n          Animated.spring(tabOffsetValue, {\n            toValue: getWidth(),\n            useNativeDriver: true\n          }).start();\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"ActionButton\",\n    component: EmptyScreen,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref5) {\n        var focused = _ref5.focused;\n        return React.createElement(TouchableOpacity, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }\n        }, React.createElement(LinearGradient, {\n          colors: ['#d11d1d', '#da3421', '#e24625', '#ea562a', '#f26530'],\n          style: {\n            width: 55,\n            height: 55,\n            borderRadius: 20,\n            justifyContent: 'center',\n            alignItems: 'center',\n            marginBottom: Platform.OS == \"android\" ? 50 : 30\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }\n        }, React.createElement(Image, {\n          source: require(\"./assets/plus.png\"),\n          style: {\n            width: 22,\n            height: 22,\n            tintColor: 'white'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }\n        })));\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Notifications\",\n    component: NotificationScreen,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref6) {\n        var focused = _ref6.focused;\n        return React.createElement(View, {\n          style: {\n            position: 'absolute',\n            top: 20\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }\n        }, React.createElement(FontAwesome5, {\n          name: \"bell\",\n          size: 20,\n          color: focused ? '#F26530' : 'gray',\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }\n        }));\n      }\n    },\n    listeners: function listeners(_ref7) {\n      var navigation = _ref7.navigation,\n          route = _ref7.route;\n      return {\n        tabPress: function tabPress(e) {\n          Animated.spring(tabOffsetValue, {\n            toValue: getWidth() * 3,\n            useNativeDriver: true\n          }).start();\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Settings\",\n    component: SettingsScreen,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref8) {\n        var focused = _ref8.focused;\n        return React.createElement(View, {\n          style: {\n            position: 'absolute',\n            top: 20\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }\n        }, React.createElement(Feather, {\n          name: \"settings\",\n          size: 20,\n          color: focused ? '#F26530' : 'gray',\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }\n        }));\n      }\n    },\n    listeners: function listeners(_ref9) {\n      var navigation = _ref9.navigation,\n          route = _ref9.route;\n      return {\n        tabPress: function tabPress(e) {\n          Animated.spring(tabOffsetValue, {\n            toValue: getWidth() * 4,\n            useNativeDriver: true\n          }).start();\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  })), React.createElement(Animated.View, {\n    style: {\n      width: getWidth() - 20,\n      height: 2,\n      backgroundColor: '#F26530',\n      position: 'absolute',\n      bottom: 60,\n      left: 50,\n      borderRadius: 20,\n      transform: [{\n        translateX: tabOffsetValue\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction getWidth() {\n  var width = Dimensions.get(\"window\").width;\n  width = width - 80;\n  return width / 5;\n}\n\nfunction EmptyScreen() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 5\n    }\n  });\n}\n\nfunction SettingsScreen() {\n  return React.createElement(SettingPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 5\n    }\n  });\n}\n\nfunction HomeScreen() {\n  return React.createElement(HomePage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 5\n    }\n  });\n}\n\nfunction NotificationScreen() {\n  return React.createElement(NotificationPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 5\n    }\n  });\n}\n\nfunction SearchScreen() {\n  return React.createElement(SwipePage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 5\n    }\n  });\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/MAN13/Downloads/friibee/friibee-compile/bottom-tab-bar/Function.js"],"names":["React","NavigationContainer","createBottomTabNavigator","LinearGradient","HomePage","SwipePage","NotificationPage","SettingPage","FontAwesome5","MaterialIcons","Feather","useRef","Tab","App","tabOffsetValue","Animated","Value","current","showLabel","style","backgroundColor","position","height","borderBottomLeftRadius","borderBottomRightRadius","borderTopLeftRadius","borderTopRightRadius","shadowColor","shadowOpacity","shadowOffset","width","paddingHorizontal","HomeScreen","tabBarIcon","focused","top","navigation","route","tabPress","e","spring","toValue","useNativeDriver","start","SearchScreen","getWidth","EmptyScreen","borderRadius","justifyContent","alignItems","marginBottom","Platform","OS","require","tintColor","NotificationScreen","SettingsScreen","bottom","left","transform","translateX","Dimensions","get","flex","styles","StyleSheet","create","container"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Animated, Dimensions, Image, Platform, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\r\nimport 'react-native-gesture-handler';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\n\r\nimport HomePage from '../HomePage';\r\nimport SwipePage from '../SwipePage';\r\nimport NotificationPage from '../NotificationPage';\r\nimport SettingPage from '../SettingPage';\r\n\r\n// Plus...\r\n//import plus from './assets/plus.png'\r\n\r\n// Font Awesome Icons...\r\nimport { FontAwesome5 } from '@expo/vector-icons';\r\nimport { MaterialIcons } from '@expo/vector-icons'; \r\nimport { Feather } from '@expo/vector-icons'; \r\n\r\nimport { useRef } from 'react';\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\n// Hiding Tab Names...\r\nexport default function App() {\r\n  // Animated Tab Indicator...\r\n  const tabOffsetValue = useRef(new Animated.Value(0)).current;\r\n  return (\r\n    <NavigationContainer>\r\n      <Tab.Navigator tabBarOptions={{\r\n        showLabel: false,\r\n        // Floating Tab Bar...\r\n        style: {\r\n          backgroundColor: '#FFF8F4',\r\n          position: 'absolute',\r\n          //bottom: 10,\r\n          //marginHorizontal: 20,\r\n          // Max Height...\r\n          height: 60,\r\n          borderBottomLeftRadius: 0,\r\n          borderBottomRightRadius: 0,\r\n          borderTopLeftRadius: 20,\r\n          borderTopRightRadius: 20,\r\n          // Shadow...\r\n          shadowColor: '#6D2903',\r\n          shadowOpacity: 0.08,\r\n          shadowOffset: {\r\n            width: 10,\r\n            height: 10\r\n          },\r\n          paddingHorizontal: 20,\r\n        }\r\n      }}>\r\n\r\n        {\r\n          // Tab Screens....\r\n\r\n          // Tab ICons....\r\n        }\r\n        <Tab.Screen name={\"Home\"} component={HomeScreen} options={{\r\n          tabBarIcon: ({ focused }) => (\r\n            <View style={{\r\n              // centring Tab Button...\r\n              position: 'absolute',\r\n              top: 20\r\n            }}>\r\n              <FontAwesome5\r\n                name=\"home\"\r\n                size={20}\r\n                color={focused ? '#F26530' : 'gray'}\r\n              ></FontAwesome5>\r\n            </View>\r\n          )\r\n        }} listeners={({ navigation, route }) => ({\r\n          // Onpress Update....\r\n          tabPress: e => {\r\n            Animated.spring(tabOffsetValue, {\r\n              toValue: 0,\r\n              useNativeDriver: true\r\n            }).start();\r\n          }\r\n        })}></Tab.Screen>\r\n\r\n        <Tab.Screen name={\"Search\"} component={SearchScreen} options={{\r\n          tabBarIcon: ({ focused }) => (\r\n            <View style={{\r\n              // centring Tab Button...\r\n              position: 'absolute',\r\n              top: 20\r\n            }}>\r\n              <MaterialIcons\r\n                name=\"swipe\"\r\n                size={20}\r\n                color={focused ? '#F26530' : 'gray'}\r\n               />\r\n              \r\n            </View>\r\n          )\r\n        }} listeners={({ navigation, route }) => ({\r\n          // Onpress Update....\r\n          tabPress: e => {\r\n            Animated.spring(tabOffsetValue, {\r\n              toValue: getWidth(),\r\n              useNativeDriver: true\r\n            }).start();\r\n          }\r\n        })}></Tab.Screen>\r\n\r\n\r\n        {\r\n\r\n          // Extra Tab Screen For Action Button..\r\n        }\r\n\r\n        <Tab.Screen name={\"ActionButton\"} component={EmptyScreen} options={{\r\n          tabBarIcon: ({ focused }) => (\r\n\r\n            \r\n            <TouchableOpacity>\r\n              <LinearGradient colors={['#d11d1d', '#da3421', '#e24625', '#ea562a', '#f26530']} \r\n               style={{\r\n                width: 55,\r\n                height: 55,\r\n                //backgroundColor: '#F26530',\r\n                borderRadius: 20,\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                marginBottom: Platform.OS == \"android\" ? 50 : 30\r\n              }}>\r\n                <Image source={require('./assets/plus.png')} style={{\r\n                  width: 22,\r\n                  height: 22,\r\n                  tintColor: 'white',\r\n                }}></Image> \r\n              \r\n              </LinearGradient>\r\n            </TouchableOpacity>\r\n            \r\n          )\r\n        }}></Tab.Screen>\r\n\r\n        <Tab.Screen name={\"Notifications\"} component={NotificationScreen} options={{\r\n          tabBarIcon: ({ focused }) => (\r\n            <View style={{\r\n              // centring Tab Button...\r\n              position: 'absolute',\r\n              top: 20\r\n            }}>\r\n              <FontAwesome5\r\n                name=\"bell\"\r\n                size={20}\r\n                color={focused ? '#F26530' : 'gray'}\r\n              ></FontAwesome5>\r\n            </View>\r\n          )\r\n        }} listeners={({ navigation, route }) => ({\r\n          // Onpress Update....\r\n          tabPress: e => {\r\n            Animated.spring(tabOffsetValue, {\r\n              toValue: getWidth() * 3,\r\n              useNativeDriver: true\r\n            }).start();\r\n          }\r\n        })}></Tab.Screen>\r\n\r\n        <Tab.Screen name={\"Settings\"} component={SettingsScreen} options={{\r\n          tabBarIcon: ({ focused }) => (\r\n            <View style={{\r\n              // centring Tab Button...\r\n              position: 'absolute',\r\n              top: 20\r\n            }}>\r\n              <Feather\r\n                name=\"settings\"\r\n                size={20}\r\n                color={focused ? '#F26530' : 'gray'}\r\n              />\r\n            </View>\r\n          )\r\n        }} listeners={({ navigation, route }) => ({\r\n          // Onpress Update....\r\n          tabPress: e => {\r\n            Animated.spring(tabOffsetValue, {\r\n              toValue: getWidth() * 4,\r\n              useNativeDriver: true\r\n            }).start();\r\n          }\r\n        })}></Tab.Screen>\r\n\r\n      </Tab.Navigator>\r\n\r\n      <Animated.View style={{\r\n        width: getWidth() - 20,\r\n        height: 2,\r\n        backgroundColor: '#F26530',\r\n        position: 'absolute',\r\n        bottom: 60,\r\n        // Horizontal Padding = 20...\r\n        left: 50,\r\n        borderRadius: 20,\r\n        transform: [\r\n          { translateX: tabOffsetValue }\r\n        ]\r\n      }}>\r\n\r\n      </Animated.View>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nfunction getWidth() {\r\n  let width = Dimensions.get(\"window\").width\r\n\r\n  // Horizontal Padding = 20...\r\n  width = width - 80\r\n\r\n  // Total five Tabs...\r\n  return width / 5\r\n}\r\n\r\nfunction EmptyScreen() {\r\n  return (\r\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction SettingsScreen() {\r\n  return (\r\n    <SettingPage/>\r\n  );\r\n}\r\n\r\nfunction HomeScreen() {\r\n  return (\r\n    <HomePage />\r\n  );\r\n}\r\n\r\nfunction NotificationScreen() {\r\n  return (\r\n    <NotificationPage/>\r\n  );\r\n}\r\n\r\nfunction SearchScreen() {\r\n  return (\r\n    <SwipePage />\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});"]},"metadata":{},"sourceType":"module"}