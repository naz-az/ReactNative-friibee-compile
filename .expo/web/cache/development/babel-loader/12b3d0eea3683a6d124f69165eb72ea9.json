{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\MAN13\\\\Downloads\\\\friibee\\\\friibee-compile\\\\SwipeFunction\\\\src\\\\Card\\\\index.js\";\nvar _excluded = [\"name\", \"source\", \"isFirst\", \"swipe\", \"tiltSign\"];\nimport { LinearGradient } from 'expo-linear-gradient';\nimport React, { useCallback } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Choice from \"../Choice\";\nimport { ACTION_OFFSET } from \"../utils/constants\";\nimport { styles } from \"./styles\";\nexport default function Card(_ref) {\n  var _this = this;\n\n  var name = _ref.name,\n      source = _ref.source,\n      isFirst = _ref.isFirst,\n      swipe = _ref.swipe,\n      tiltSign = _ref.tiltSign,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var rotate = Animated.multiply(swipe.x, tiltSign).interpolate({\n    inputRange: [-ACTION_OFFSET, 0, ACTION_OFFSET],\n    outputRange: ['8deg', '0deg', '-8deg']\n  });\n  var likeOpacity = swipe.x.interpolate({\n    inputRange: [25, ACTION_OFFSET],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  });\n  var nopeOpacity = swipe.x.interpolate({\n    inputRange: [-ACTION_OFFSET, -25],\n    outputRange: [1, 0],\n    extrapolate: 'clamp'\n  });\n  var animatedCardStyle = {\n    transform: [].concat(_toConsumableArray(swipe.getTranslateTransform()), [{\n      rotate: rotate\n    }])\n  };\n  var renderChoice = useCallback(function () {\n    return React.createElement(React.Fragment, null, React.createElement(Animated.View, {\n      style: [styles.choiceContainer, styles.likeContainer, {\n        opacity: likeOpacity\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, React.createElement(Choice, {\n      type: \"like\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    })), React.createElement(Animated.View, {\n      style: [styles.choiceContainer, styles.nopeContainer, {\n        opacity: nopeOpacity\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, React.createElement(Choice, {\n      type: \"nope\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    })));\n  }, [likeOpacity, nopeOpacity]);\n  return React.createElement(Animated.View, _extends({\n    style: [styles.container, isFirst && animatedCardStyle]\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }), React.createElement(Image, {\n    source: source,\n    style: styles.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }), React.createElement(LinearGradient, {\n    colors: ['transparent', 'rgba(0,0,0,0.2)'],\n    style: styles.gradient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: styles.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, name), isFirst && renderChoice());\n}","map":{"version":3,"sources":["C:/Users/MAN13/Downloads/friibee/friibee-compile/SwipeFunction/src/Card/index.js"],"names":["LinearGradient","React","useCallback","Choice","ACTION_OFFSET","styles","Card","name","source","isFirst","swipe","tiltSign","rest","rotate","Animated","multiply","x","interpolate","inputRange","outputRange","likeOpacity","extrapolate","nopeOpacity","animatedCardStyle","transform","getTranslateTransform","renderChoice","choiceContainer","likeContainer","opacity","nopeContainer","container","image","gradient"],"mappings":"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","sourcesContent":["import { LinearGradient } from 'expo-linear-gradient';\r\nimport React, { useCallback } from 'react';\r\nimport { Animated, Image, Text, View } from 'react-native';\r\nimport Choice from '../Choice';\r\nimport { ACTION_OFFSET } from '../utils/constants';\r\n\r\nimport { styles } from './styles';\r\n\r\nexport default function Card({\r\n  name,\r\n  source,\r\n  isFirst,\r\n  swipe,\r\n  tiltSign,\r\n  ...rest\r\n}) {\r\n  const rotate = Animated.multiply(swipe.x, tiltSign).interpolate({\r\n    inputRange: [-ACTION_OFFSET, 0, ACTION_OFFSET],\r\n    outputRange: ['8deg', '0deg', '-8deg'],\r\n  });\r\n\r\n  const likeOpacity = swipe.x.interpolate({\r\n    inputRange: [25, ACTION_OFFSET],\r\n    outputRange: [0, 1],\r\n    extrapolate: 'clamp',\r\n  });\r\n\r\n  const nopeOpacity = swipe.x.interpolate({\r\n    inputRange: [-ACTION_OFFSET, -25],\r\n    outputRange: [1, 0],\r\n    extrapolate: 'clamp',\r\n  });\r\n\r\n  const animatedCardStyle = {\r\n    transform: [...swipe.getTranslateTransform(), { rotate }],\r\n  };\r\n\r\n  const renderChoice = useCallback(() => {\r\n    return (\r\n      <>\r\n        <Animated.View\r\n          style={[\r\n            styles.choiceContainer,\r\n            styles.likeContainer,\r\n            { opacity: likeOpacity },\r\n          ]}\r\n        >\r\n          <Choice type=\"like\" />\r\n        </Animated.View>\r\n        <Animated.View\r\n          style={[\r\n            styles.choiceContainer,\r\n            styles.nopeContainer,\r\n            { opacity: nopeOpacity },\r\n          ]}\r\n        >\r\n          <Choice type=\"nope\" />\r\n        </Animated.View>\r\n      </>\r\n    );\r\n  }, [likeOpacity, nopeOpacity]);\r\n\r\n  return (\r\n    <Animated.View\r\n      style={[styles.container, isFirst && animatedCardStyle]}\r\n      {...rest}\r\n    >\r\n      <Image source={source} style={styles.image} />\r\n      <LinearGradient\r\n        colors={['transparent', 'rgba(0,0,0,0.2)']}\r\n        style={styles.gradient}\r\n      />\r\n      <Text style={styles.name}>{name}</Text>\r\n\r\n      {isFirst && renderChoice()}\r\n    </Animated.View>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}